trigger:
  branches:
    include:
      - master  # Trigger the pipeline on changes to the master branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  node_version: '20.x'  # Specify the Node.js version

stages:
  # Stage 1: Build
  - stage: Build
    displayName: "Build Application"
    jobs:
      - job: BuildJob
        displayName: "Build React Application"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '$(node_version)'
            displayName: "Install Node.js"

          - script: |
              npm install
              npm run build
            displayName: "Install Dependencies and Build Application"

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: './build'
              artifact: 'ReactAppBuild'
              publishLocation: 'pipeline'
            displayName: "Publish Build Artifacts"

  # Stage 2: Deploy to Development
  - stage: Development
    displayName: "Deploy to Development"
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeployDev
        environment: Development
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifact: 'ReactAppBuild'
                    targetPath: '$(Pipeline.Workspace)/ReactAppBuild'
                  displayName: "Download Build Artifacts"

                - script: echo "Deploying to Development Environment"
                  displayName: "Deploy React App to Development"

  # Stage 3: Deploy to Production
  - stage: Production
    displayName: "Deploy to Production"
    dependsOn: Development
    condition: succeeded()
    jobs:
      - deployment: DeployProd
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifact: 'ReactAppBuild'
                    targetPath: '$(Pipeline.Workspace)/ReactAppBuild'
                  displayName: "Download Build Artifacts"

                - script: echo "Deploying to Production Environment"
                  displayName: "Deploy React App to Production"
